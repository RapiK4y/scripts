# a : 기존 등급
# b : 큐브 등급

on load:
    broadcast "&9 큐브 스크립트 리로드"

    EnchantTypeSetting()

command /ss1:
    trigger:
        give player a diamond pickaxe with lore "&2ⓛ 잠재옵션"

command /ss2:
    trigger:
        give player a diamond pickaxe with lore "&9ⓡ 잠재옵션"
        
command /hand <integer>:
    trigger:
        set {targetitem} to player's tool
        
        if {targetitem}'s lore contains "&9ⓡ 잠재옵션":
            set {toolrank} to 1
        else if {targetitem}'s lore contains "&5ⓔ 잠재옵션":
            set {toolrank} to 2
        else if {targetitem}'s lore contains "&6ⓤ 잠재옵션":
            set {toolrank} to 3
        else if {targetitem}'s lore contains "&2ⓛ 잠재옵션":
            set {toolrank} to 4
        else:
            broadcast "적용할 수 없는 아이템"
            stop

        disenchant {targetitem}

        Cube_Main({toolrank}, arg-1)
        Cube_Enchant({itemoption})

        set line 1 of lore of {targetitem} to "&f---------------------------"
        if {itemrank} is 1:
            set line 2 of lore of {targetitem} to "&9ⓡ 잠재옵션"
        else if {itemrank} is 2:
            set line 2 of lore of {targetitem} to "&5ⓔ 잠재옵션"
        else if {itemrank} is 3:
            set line 2 of lore of {targetitem} to "&6ⓤ 잠재옵션"
        else if {itemrank} is 4:
            set line 2 of lore of {targetitem} to "&2ⓛ 잠재옵션"
        set line 3 of lore of {targetitem} to "&f%{finaloptiontype::1}%: %{finaloptionrank::1}%"
        set line 4 of lore of {targetitem} to "&f%{finaloptiontype::2}%: %{finaloptionrank::2}%"
        set line 5 of lore of {targetitem} to "&f%{finaloptiontype::3}%: %{finaloptionrank::3}%"
        set player's tool to {targetitem}

        delete {targetitem}
        delete {finalcube::*}
        delete {finaloptiontype::*}
        delete {finaloptionrank::*}
        set {legend_pickaxe_option::6} to "행운"

command /cube <integer> <integer>:
    trigger:
        Cube_Main(arg-1, arg-2)

function EnchantTypeSetting():
    set {rare_pickaxe_option::1} to "기능없음"
    set {rare_pickaxe_option::2} to "효율"
    set {rare_pickaxe_option::3} to "효율"

    set {epic_pickaxe_option::1} to "기능없음"
    set {epic_pickaxe_option::2} to "효율"
    set {epic_pickaxe_option::3} to "효율"
    set {epic_pickaxe_option::4} to "효율"
    set {epic_pickaxe_option::5} to "효율"
    set {epic_pickaxe_option::6} to "효율"

    set {unique_pickaxe_option::1} to "효율"
    set {unique_pickaxe_option::2} to "효율"
    set {legend_pickaxe_option::3} to "효율"
    set {unique_pickaxe_option::3} to "이동속도 증가"

    set {legend_pickaxe_option::1} to "효율"    
    set {legend_pickaxe_option::2} to "효율"
    set {legend_pickaxe_option::3} to "효율"
    set {legend_pickaxe_option::3} to "효율"
    set {legend_pickaxe_option::4} to "이동속도 증가"    
    set {legend_pickaxe_option::5} to "이동속도 증가"
    set {legend_pickaxe_option::6} to "행운"    

function Cube_Main(a : integer, b : integer):

    if {_a} >= 3:
        if {_b} < 2:
            broadcast "설정할 수 없음"
            stop
    else if {_a} >= 4:
        if {_b} <= 3:
            broadcast "설정할 수 없음"
            stop

    if {_b} is 1:
        set {itemrank} to OddCube({_a})
    else if {_b} is 2:
        set {itemrank} to CraftsmanCube({_a})
    else if {_b} is 3:
        set {itemrank} to MasterCube({_a})
    else if {_b} is 4:
        set {itemrank} to BlackCube({_a})

    Cube_Options({itemrank})

    FinalListCube()

function FinalListCube():
    set {_n} to 0

    loop 3 times:
        add 1 to {_n}
        add {finaloptionrank::%{_n}%} to {finalcube::%{finaloptiontype::%{_n}%}%}

function Cube_Enchant(r : integer):
    if {finalcube::효율} is set:
        set {_e} to floor({finalcube::효율})
        if {_e} is 1:
            enchant {targetitem} with efficiency 1
        if {_e} is 2:
            enchant {targetitem} with efficiency 2
        if {_e} is 3:
            enchant {targetitem} with efficiency 3
        if {_e} is 4:
            enchant {targetitem} with efficiency 4
        if {_e} is 5:
            enchant {targetitem} with efficiency 5
        if {_e} is 6:
            enchant {targetitem} with efficiency 6
        if {_e} is 7:
            enchant {targetitem} with efficiency 7

    if {finalcube::행운} is set:
        set {_e} to floor({finalcube::행운})
        if {_e} is 1:
            enchant {targetitem} with fortune 1
        if {_e} >= 2:
            enchant {targetitem} with fortune 2

function Cube_Options(a: integer):
    set {_n} to 0

    loop 3 times:
        add 1 to {_n}
        set {_optionrank} to random integer between 1 and 100

        if {_a} is 0:
            stop
        if {_a} is 1:
            RareOptionDecide({_n}, {_optionrank})
        if {_a} is 2:
            EpicOptionDecide({_n},{_optionrank})
        if {_a} is 3:
            UniqueOptionDecide({_n}, {_optionrank})
        if {_a} is 4:
            LegendOptionDecide({_n}, {_optionrank})

function RareOptionDecide(n : integer, r: integer):
    set {finaloptiontype::%{_n}%} to random element of {rare_pickaxe_option::*}    

    if {_n} is 1:
        set {finaloptionrank::%{_n}%} to 1.5
    else if {_n} is 2:
        if {_r} <= 10:
            set {finaloptionrank::%{_n}%} to 1.5
        else:
            set {finaloptionrank::%{_n}%} to 1
    else:
        set {finaloptiontype::%{_n}%} to "기능없음"
        set {finaloptionrank::%{_n}%} to 0

function EpicOptionDecide(n : integer, r: integer):
    set {finaloptiontype::%{_n}%} to random element of {epic_pickaxe_option::*}
    
    if {_n} is 1:
        set {finaloptionrank::%{_n}%} to 1.55
    else if {_n} is 2:
        if {_r} <= 10:
            set {finaloptionrank::%{_n}%} to 1.55
        else:
            set {finaloptionrank::%{_n}%} to 0.95
    else:
        if {_r} <= 1:
            set {finaloptionrank::%{_n}%} to 1.55
        else:
            set {finaloptionrank::%{_n}%} to 0.95
        
function UniqueOptionDecide(n : integer, r: integer):
    set {finaloptiontype::%{_n}%} to random element of {unique_pickaxe_option::*}

    if {_n} is 1:
        set {finaloptionrank::%{_n}%} to 1.75
    else if {_n} is 2:
        if {_r} <= 10:
            set {finaloptionrank::%{_n}%} to 1.75
        else:
            set {finaloptionrank::%{_n}%} to 1.35
    else:
        if {_r} <= 1:
            set {finaloptionrank::%{_n}%} to 1.75
        else:
            set {finaloptionrank::%{_n}%} to 1.35

function LegendOptionDecide(n : integer, r: integer):
    set {finaloptiontype::%{_n}%} to random element of {legend_pickaxe_option::*}

    if {finaloptiontype::%{_n}%} is "행운":
        delete {legend_pickaxe_option::6}
        if {_n} is 1:
            set {finaloptionrank::%{_n}%} to 2
        else:
            set {finaloptionrank::%{_n}%} to 1
    else:
        if {_n} is 1:
            set {finaloptionrank::%{_n}%} to 2.5
        else if {_n} is 2:
            if {_r} <= 10:
                set {finaloptionrank::%{_n}%} to 2.5
            else:
                set {finaloptionrank::%{_n}%} to 2
        else:
            if {_r} <= 1:
                set {finaloptionrank::%{_n}%} to 2.5
            else:
                set {finaloptionrank::%{_n}%} to 2

function OddCube(a : integer) :: integer:
    set {_up} to random integer between 1 and 1000

    if {_a} >= 2:
        return {_a}

    else:
        if {_up} <= 10:
            broadcast "등급 상승"
            return 2
        else:
            return {_a}

function CraftsmanCube(a : integer) :: integer:
    set {_up} to random integer between 1 and 1000

    if {_a} >= 3:
        return {_a}

    else:
        if {_a} is 1:
            if {_up} <= 47:
                broadcast "등급 상승"
                return 2
            else:
                return 1

        else if {_a} is 2:
            if {_up} <= 12:
                broadcast "등급 상승"
                return 3
            else:
                return 2
        else:
            return {_a}

function MasterCube(a : integer) :: integer:
    set {_up} to random integer between 1 and 1000

    if {_a} is 1:
        if {_up} <= 80:
            broadcast "등급 상승"
            return 2
        else:
            return 1

    else if {_a} is 2:
        if {_up} <= 17:
            broadcast "등급 상승"
            return 3
        else:
            return 2

    else if {_a} is 3:
        if {_up} <= 2:
            return 4
        else:
            return 3
    else:
        return {_a}

function BlackCube(a : integer) :: integer:
    set {_up} to random integer between 1 and 1000

    if {_a} is 1:
        if {_up} <= 150:
            broadcast "등급 상승"
            return 2
        else:
            return 1
    else if {_a} is 2:
        if {_up} <= 35:
            broadcast "등급 상승"
            return 3
        else:
            return 2
    else if {_a} is 3:
        if {_up} <= 12:
            broadcast "등급 상승"
            return 4
        else:
            return 3
    else:
        return {_a} 

command /gui:
  trigger:
    open chest inventory with 3 rows named "&fExample GUI" to player
    wait 1 tick
    set slot 0 of player's current inventory to white stained glass pane
    set slot 1 of player's current inventory to white stained glass pane
    set slot 2 of player's current inventory to white stained glass pane
    set slot 3 of player's current inventory to white stained glass pane
    set slot 4 of player's current inventory to white stained glass pane
    set slot 5 of player's current inventory to white stained glass pane
    set slot 6 of player's current inventory to white stained glass pane
    set slot 7 of player's current inventory to white stained glass pane
    set slot 8 of player's current inventory to white stained glass pane
    set slot 9 of player's current inventory to white stained glass pane
    set slot 10 of player's current inventory to white stained glass pane
    set slot 12 of player's current inventory to white stained glass pane
    set slot 13 of player's current inventory to anvil
    set slot 14 of player's current inventory to white stained glass pane
    set slot 16 of player's current inventory to white stained glass pane
    set slot 17 of player's current inventory to white stained glass pane
    set slot 18 of player's current inventory to white stained glass pane
    set slot 19 of player's current inventory to white stained glass pane
    set slot 20 of player's current inventory to white stained glass pane
    set slot 21 of player's current inventory to white stained glass pane
    set slot 22 of player's current inventory to white stained glass pane
    set slot 23 of player's current inventory to white stained glass pane
    set slot 24 of player's current inventory to white stained glass pane
    set slot 25 of player's current inventory to white stained glass pane
    set slot 26 of player's current inventory to white stained glass pane
    set slot 27 of player's current inventory to white stained glass pane

on inventory click:
    inventory name of current inventory of player is "&fExample GUI":
        if clicked slot is 13:
            broadcast "asdf"
            
        if clicked slot is not 11 or 15:
            cancel event

on inventory close:
	inventory name of current inventory of player is "&fExample GUI":
        set {_a} to index of slot 11
        give player {_a}
        set {_b} to slot 15 of player's current inventory