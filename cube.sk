# a : 기존 등급
# b : 큐브 등급

options:
    rare_efficience_1 : 100
    rare_efficience_2 : 30
    rare_efficience_3 : 0

    epic_efficience_1 : 80
    epic_efficience_2 : 50
    epic_efficience_3 : 0

    uniq_efficience_1 : 80
    uniq_efficience_2 : 50
    uniq_efficience_3 : 0
    
    legend_efficience_1 : 50
    legend_efficience_2 : 30
    legend_efficience_3 : 30

on load:
    broadcast "&9 큐브 스크립트 리로드"

    EnchantTypeSetting()

command /ss1:
    trigger:
        give player a diamond pickaxe with lore "&2ⓛ 잠재옵션"

command /ss2:
    trigger:
        give player a diamond pickaxe with lore "&9ⓡ 잠재옵션"
        
command /hand <integer>:
    trigger:
        set {targetitem} to player's tool
        
        if {targetitem}'s lore contains "&9ⓡ 잠재옵션":
            set {toolrank} to 1
        else if {targetitem}'s lore contains "&5ⓔ 잠재옵션":
            set {toolrank} to 2
        else if {targetitem}'s lore contains "&6ⓤ 잠재옵션":
            set {toolrank} to 3
        else if {targetitem}'s lore contains "&2ⓛ 잠재옵션":
            set {toolrank} to 4
        else:
            broadcast "적용할 수 없는 아이템"
            stop

        Cube_Main({toolrank}, arg-1)
        Cube_Enchant({itemoption})

        set line 1 of lore of {targetitem} to "&f---------------------------"
        if {itemrank} is 1:
            set line 2 of lore of {targetitem} to "&9ⓡ 잠재옵션"
        else if {itemrank} is 2:
            set line 2 of lore of {targetitem} to "&5ⓔ 잠재옵션"
        else if {itemrank} is 3:
            set line 2 of lore of {targetitem} to "&6ⓤ 잠재옵션"
        else if {itemrank} is 4:
            set line 2 of lore of {targetitem} to "&2ⓛ 잠재옵션"
        set line 3 of lore of {targetitem} to "&f%{finaloptiontype::1}%: %{finaloptionrank::1}%"
        set line 4 of lore of {targetitem} to "&f%{finaloptiontype::2}%: %{finaloptionrank::2}%"
        set line 5 of lore of {targetitem} to "&f%{finaloptiontype::3}%: %{finaloptionrank::3}%"
        set player's tool to {targetitem}

command /cube <integer> <integer>:
    trigger:
        Cube_Main(arg-1, arg-2)

function EnchantTypeSetting():
    set {rare_pickaxe_option::1} to "기능없음"
    set {rare_pickaxe_option::2} to "효율"
    
    set {epic_pickaxe_option::2} to "효율"
    
    set {unique_pickaxe_option::1} to "효율"
    set {unique_pickaxe_option::2} to "이동속도 증가"

    set {legend_pickaxe_option::1} to "효율"    
    set {legend_pickaxe_option::2} to "이동속도 증가"    
    set {legend_pickaxe_option::3} to "행운"    

function Cube_Main(a : integer, b : integer):

    if {_a} >= 3:
        if {_b} < 2:
            broadcast "설정할 수 없음"
            stop
    else if {_a} >= 4:
        if {_b} <= 3:
            broadcast "설정할 수 없음"
            stop

    if {_b} is 1:
        set {itemrank} to OddCube({_a})
    else if {_b} is 2:
        set {itemrank} to CraftsmanCube({_a})
    else if {_b} is 3:
        set {itemrank} to MasterCube({_a})
    else if {_b} is 4:
        set {itemrank} to BlackCube({_a})

    Cube_Options({itemrank})

    FinalListCube()

function FinalListCube():
    set {_n} to 0
    loop 3 times:
        add 1 to {_n}
        add {finaloptionrank::%{_n}%} to {finalcube::%{finaloptiontype::%{_n}%}%}

function Cube_Enchant(r : integer):
    broadcast "Enchant"

function Cube_Options(a: integer):
    set {_n} to 0

    loop 3 times:
        add 1 to {_n}
        set {_optionrank} to random integer between 1 and 100

        if {_a} is 0:
            stop
        if {_a} is 1:
            RareOptionDecide({_n}, {_optionrank})
        if {_a} is 2:
            EpicOptionDecide({_n},{_optionrank})
        if {_a} is 3:
            UniqueOptionDecide({_n}, {_optionrank})
        if {_a} is 4:
            LegendOptionDecide({_n}, {_optionrank})
    

function RareOptionDecide(n : integer, r: integer):
    if {_n} is not 3:
        set {finaloptiontype::%{_n}%} to random element of {rare_pickaxe_option::*}
        if {finaloptiontype::%{_n}%} is "효율":
            set {finaloptionrank::%{_n}%} to 0.5
        else:
            set {finaloptionrank::%{_n}%} to 0
    else:
        set {finaloptiontype::%{_n}%} to "기능없음"
        set {finaloptionrank::%{_n}%} to 0

function EpicOptionDecide(n : integer, r: integer):
    set {finaloptiontype::%{_n}%} to random element of {epic_pickaxe_option::*}
    
    if {_n} is 1:
        set {finaloptionrank::%{_n}%} to 1
    else if {_n} is 2:
        if {_r} <= 10:
            set {finaloptionrank::%{_n}%} to 1
        else:
            set {finaloptionrank::%{_n}%} to 0.5
    else:
        if {_r} <= 1:
            set {finaloptionrank::%{_n}%} to 1
        else:
            set {finaloptionrank::%{_n}%} to 0.5
        
function UniqueOptionDecide(n : integer, r: integer):
    set {finaloptiontype::%{_n}%} to random element of {unique_pickaxe_option::*}

    if {_n} is 1:
        set {finaloptionrank::%{_n}%} to 1.5
    else if {_n} is 2:
        if {_r} <= 10:
            set {finaloptionrank::%{_n}%} to 1.5
        else:
            set {finaloptionrank::%{_n}%} to 1
    else:
        if {_r} <= 1:
            set {finaloptionrank::%{_n}%} to 1.5
        else:
            set {finaloptionrank::%{_n}%} to 1

function LegendOptionDecide(n : integer, r: integer):
    set {finaloptiontype::%{_n}%} to random element of {unique_pickaxe_option::*}

    if {_n} is 1:
        set {finaloptionrank::%{_n}%} to 2
    else if {_n} is 2:
        if {_r} <= 10:
            set {finaloptionrank::%{_n}%} to 2
        else:
            set {finaloptionrank::%{_n}%} to 1.5
    else:
        if {_r} <= 1:
            set {finaloptionrank::%{_n}%} to 2
        else:
            set {finaloptionrank::%{_n}%} to 1.5

function OddCube(a : integer) :: integer:
    set {_up} to random integer between 1 and 1000

    if {_a} >= 2:
        return {_a}

    else:
        if {_up} <= 10:
            broadcast "등급 상승"
            return 2
        else:
            return {_a}

function CraftsmanCube(a : integer) :: integer:
    set {_up} to random integer between 1 and 1000

    if {_a} >= 3:
        return {_a}

    else:
        if {_a} is 1:
            if {_up} <= 47:
                broadcast "등급 상승"
                return 2
            else:
                return 1

        else if {_a} is 2:
            if {_up} <= 12:
                broadcast "등급 상승"
                return 3
            else:
                return 2
        else:
            return {_a}

function MasterCube(a : integer) :: integer:
    set {_up} to random integer between 1 and 1000

    if {_a} is 1:
        if {_up} <= 80:
            broadcast "등급 상승"
            return 2
        else:
            return 1

    else if {_a} is 2:
        if {_up} <= 17:
            broadcast "등급 상승"
            return 3
        else:
            return 2

    else if {_a} is 3:
        if {_up} <= 2:
            return 4
        else:
            return 3
    else:
        return {_a}

function BlackCube(a : integer) :: integer:
    set {_up} to random integer between 1 and 1000

    if {_a} is 1:
        if {_up} <= 150:
            broadcast "등급 상승"
            return 2
        else:
            return 1
    else if {_a} is 2:
        if {_up} <= 35:
            broadcast "등급 상승"
            return 3
        else:
            return 2
    else if {_a} is 3:
        if {_up} <= 12:
            broadcast "등급 상승"
            return 4
        else:
            return 3
    else:
        return {_a} 

command /gui:
  trigger:
    open chest inventory with 3 rows named "&fExample GUI" to player
    wait 1 tick
    set slot 0 of player's current inventory to stone named "&7Stoney" with lore "&7Hi, My name is stoney!"

on inventory click:
    inventory name of current inventory of player is "&fExample GUI":
        clicked slot is 13:
            cancel event